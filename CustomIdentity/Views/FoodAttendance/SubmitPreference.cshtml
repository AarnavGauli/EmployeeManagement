@model FoodAttendanceViewModel

@{
    ViewData["Title"] = "Food Preference";
}

<div class="text-center">
    <h2>Food Preference</h2>

    <form method="post" asp-action="SubmitPreference">
        <div class="btn-group btn-group-toggle" data-toggle="buttons">
            <label class="btn btn-outline-primary btn-lg">
                <input type="radio" asp-for="Preference" id="vegCheckbox" value="false" checked /> Veg
            </label>
            <label class="btn btn-outline-primary btn-lg">
                <input type="radio" asp-for="Preference" id="nonVegCheckbox" value="true" /> Non-Veg
            </label>
        </div>
        <br />
        <button type="submit" class="btn btn-primary" id="submitbtn">Submit</button>

        

        <br />
        <br />
        <br />
        @if (ViewBag.TodayResponsesCount != null)
        {
            <h3>Total Responses Today</h3>
            <p>Total Food Attendance Responses Today: @ViewBag.TodayResponsesCount</p>
            <p>Veg Count: @ViewBag.VegCountToday  Non-Veg Count: @ViewBag.NonVegCountToday</p>
        }
    </form>
    <br />
    <br />
    <h3>Food Preference Trends</h3>
    <canvas id="attendanceChart" width="400" height="200"></canvas>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var nonVegCheckbox = document.getElementById("nonVegCheckbox");
            var vegCheckbox = document.getElementById("vegCheckbox"); // Corrected ID

            var today = new Date().getDay();
            var hour = new Date().getHours();

            // Disable non-veg checkbox if it's not Friday (5)
            if (today !== 5) {
                nonVegCheckbox.disabled = true;
            }

            // Disable both checkboxes after 1 PM (13:00 hours)
            if (hour > 13) {
                submitbtn.disabled = true;
            }
        });





        document.addEventListener("DOMContentLoaded", function () {
            var ctx = document.getElementById('attendanceChart').getContext('2d');

            // Fetch data from the server
            fetch('@Url.Action("AttendanceSummary", "FoodAttendance")')
                .then(response => response.json())
                .then(data => {
                    // Sort data by date in ascending order
                    data.sort((a, b) => new Date(a.date) - new Date(b.date));

                    // Limit to the 30 most recent data points
                    var limitedData = data.slice(-30);

                    var labels = limitedData.map(item => item.date ? new Date(item.date).toLocaleDateString() : 0);
                    var counts = limitedData.map(item => item.totalPreferences);

                    new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: 'Total Preferences',
                                data: counts,
                                borderColor: 'rgba(75, 192, 192, 1)',
                                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            scales: {
                                x: {
                                    beginAtZero: true,
                                    maxTicksLimit: 30 // Ensure no more than 30 ticks on the x-axis
                                },
                                y: {
                                    beginAtZero: true,
                                    ticks: {
                                        stepSize: 2, // Adjust as needed
                                        maxTicksLimit: 20 // Ensure no more than 20 ticks on the y-axis
                                    }
                                }
                            }
                        }
                    });
                })
                .catch(error => console.error('Error fetching data:', error));
        });

    </script>
}


